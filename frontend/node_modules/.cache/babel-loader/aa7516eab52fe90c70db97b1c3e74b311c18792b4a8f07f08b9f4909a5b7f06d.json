{"ast":null,"code":"import api from \"./api\";\nconst requestsApi = {\n  async getAll(token, userId, role) {\n    // Si admin, pas besoin de userId\n    const params = role === \"admin\" ? {} : {\n      user_id: userId,\n      role\n    };\n    return api.get(\"/requests\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params\n    });\n  },\n  async create(data, token) {\n    return api.post(\"/requests\", data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  },\n  async update(id, data, token) {\n    return api.put(`/requests/${id}`, data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  },\n  async getOne(id, token) {\n    return api.get(`/requests/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n};\nexport default requestsApi;","map":{"version":3,"names":["api","requestsApi","getAll","token","userId","role","params","user_id","get","headers","Authorization","create","data","post","update","id","put","getOne"],"sources":["C:/Users/enzor/OneDrive/Документы/EPSI/SN2/projet reseau/frontend/src/services/requests.js"],"sourcesContent":["import api from \"./api\";\r\n\r\nconst requestsApi = {\r\n  async getAll(token, userId, role) {\r\n    // Si admin, pas besoin de userId\r\n    const params = role === \"admin\" ? {} : { user_id: userId, role };\r\n    return api.get(\"/requests\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n      params,\r\n    });\r\n  },\r\n  async create(data, token) {\r\n    return api.post(\"/requests\", data, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  },\r\n  async update(id, data, token) {\r\n    return api.put(`/requests/${id}`, data, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  },\r\n  async getOne(id, token) {\r\n    return api.get(`/requests/${id}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  },\r\n};\r\n\r\nexport default requestsApi;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,GAAG;EAClB,MAAMC,MAAMA,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAE;IAChC;IACA,MAAMC,MAAM,GAAGD,IAAI,KAAK,OAAO,GAAG,CAAC,CAAC,GAAG;MAAEE,OAAO,EAAEH,MAAM;MAAEC;IAAK,CAAC;IAChE,OAAOL,GAAG,CAACQ,GAAG,CAAC,WAAW,EAAE;MAC1BC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUP,KAAK;MAAG,CAAC;MAC7CG;IACF,CAAC,CAAC;EACJ,CAAC;EACD,MAAMK,MAAMA,CAACC,IAAI,EAAET,KAAK,EAAE;IACxB,OAAOH,GAAG,CAACa,IAAI,CAAC,WAAW,EAAED,IAAI,EAAE;MACjCH,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUP,KAAK;MAAG;IAC9C,CAAC,CAAC;EACJ,CAAC;EACD,MAAMW,MAAMA,CAACC,EAAE,EAAEH,IAAI,EAAET,KAAK,EAAE;IAC5B,OAAOH,GAAG,CAACgB,GAAG,CAAC,aAAaD,EAAE,EAAE,EAAEH,IAAI,EAAE;MACtCH,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUP,KAAK;MAAG;IAC9C,CAAC,CAAC;EACJ,CAAC;EACD,MAAMc,MAAMA,CAACF,EAAE,EAAEZ,KAAK,EAAE;IACtB,OAAOH,GAAG,CAACQ,GAAG,CAAC,aAAaO,EAAE,EAAE,EAAE;MAChCN,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUP,KAAK;MAAG;IAC9C,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAeF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}